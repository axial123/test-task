// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sofomo.Forecast.Data;

#nullable disable

namespace Sofomo.Forecast.Data.Migrations
{
    [DbContext(typeof(ForecastDbContext))]
    [Migration("20250317164140_UpdateIndex")]
    partial class UpdateIndex
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Forecast")
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Sofomo.Forecast.Forecast", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<double>("Temperature")
                        .HasColumnType("float");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Latitude", "Longitude", "Time")
                        .IsUnique();

                    b.ToTable("Forecast", "Forecast");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Latitude = 37.774900000000002,
                            Longitude = -122.4194,
                            Temperature = 18.5,
                            Time = new DateTime(2025, 3, 10, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Latitude = 40.712800000000001,
                            Longitude = -74.006,
                            Temperature = 12.300000000000001,
                            Time = new DateTime(2025, 3, 10, 15, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Latitude = 51.507399999999997,
                            Longitude = -0.1278,
                            Temperature = 0.0,
                            Time = new DateTime(2025, 3, 10, 9, 30, 0, 0, DateTimeKind.Unspecified)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
